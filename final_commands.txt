##### Install NVIDIA Driver #####

sudo apt update -y
sudo apt upgrade  -y
sudo apt install nvidia-driver-535 -y

##### REBOOT #####

sudo apt install gcc
wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
sudo sh cuda_11.8.0_520.61.05_linux.run --toolkit --silent --override
source ~/.bashrc

##### REBOOT #####

wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
sudo dpkg -i cuda-keyring_1.0-1_all.deb
sudo apt update
sudo apt install libcudnn8=8.9.7.29-1+cuda11.8 libcudnn8-dev=8.9.7.29-1+cuda11.8
sudo apt install libnccl2=2.15.5-1+cuda11.8 libnccl-dev=2.15.5-1+cuda11.8

##### REBOOT #####

echo 'export CUDA_HOME=/usr/local/cuda-11.8' >> ~/.bashrc
echo 'export PATH=$CUDA_HOME/bin:$PATH' >> ~/.bashrc
echo 'export LD_LIBRARY_PATH=$CUDA_HOME/lib64:/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH' >> ~/.bashrc
echo 'export NCCL_INCLUDE_DIR=/usr/include' >> ~/.bashrc
echo 'export NCCL_LIB_DIR=/lib/x86_64-linux-gnu' >> ~/.bashrc
echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6' >> ~/.bashrc
source ~/.bashrc
mkdir -p ~/miniconda3
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
rm ~/miniconda3/miniconda.sh
echo ". /users/${USER}/miniconda3/etc/profile.d/conda.sh" >> ~/.bashrc
. /users/${USER}/miniconda3/etc/profile.d/conda.sh
~/miniconda3/bin/conda create -n llm python=3.11 -y
conda activate llm
pip3 install --upgrade pip
git clone https://github.com/Jiminator/Megatron-LM.git
cd Megatron-LM/
pip install -e .
cd ..
git clone https://github.com/ninja-build/ninja.git && cd ninja
git checkout release
./configure.py --bootstrap
cd ..
git clone https://github.com/NVIDIA/apex
cd apex
pip uninstall torch torchvision torchaudio -y
pip install torch==2.7.1+cu118 torchvision==0.22.1+cu118 --extra-index-url https://download.pytorch.org/whl/cu118
pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" ./
cd ../
mkdir -p ./oscar
cd ./oscar
wget https://huggingface.co/bigscience/misc-test-data/resolve/main/stas/oscar-1GB.jsonl.xz
wget https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-vocab.json
wget https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-merges.txt
xz -d oscar-1GB.jsonl.xz
cd ..
python3 Megatron-LM/tools/preprocess_data.py --input ./oscar/oscar-1GB.jsonl --output-prefix meg-gpt2 --vocab-file ./oscar/gpt2-vocab.json --tokenizer-type GPT2BPETokenizer  --merge-file ./oscar/gpt2-merges.txt --append-eod --workers 8
mkdir ckpt
mkdir tensorboard
cd Megatron-LM/
export TORCHDYNAMO_DISABLE=1
bash examples/gpt3/train_gpt3_175b_distributed.sh 
cd ../
